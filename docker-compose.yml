# CommerceBox - Sistema de Inventario Comercial Dual
# Docker Compose Configuration

version: '3.8'

services:
  # Base de datos PostgreSQL
  commercebox-db:
    image: postgres:15
    container_name: commercebox_db
    environment:
      POSTGRES_DB: ${COMMERCEBOX_DB_NAME:-commercebox}
      POSTGRES_USER: ${COMMERCEBOX_DB_USER:-commercebox_user}
      POSTGRES_PASSWORD: ${COMMERCEBOX_DB_PASSWORD:-commercebox_pass}
    volumes:
      - commercebox_postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "5432:5432"
    restart: unless-stopped
    networks:
      - commercebox_network

  # Redis para Celery y cache
  commercebox-redis:
    image: redis:7-alpine
    container_name: commercebox_redis
    ports:
      - "6379:6379"
    restart: unless-stopped
    networks:
      - commercebox_network

  # Aplicación web Django
  commercebox-web:
    build: .
    container_name: commercebox_web
    command: python manage.py runserver 0.0.0.0:8000
    volumes:
      - .:/app
      - ./media:/app/media
      - ./static:/app/static
      - ./logs:/app/logs
    ports:
      - "8000:8000"
    depends_on:
      - commercebox-db
      - commercebox-redis
    environment:
      - COMMERCEBOX_DEBUG=1
      - COMMERCEBOX_DB_HOST=commercebox-db
      - COMMERCEBOX_REDIS_URL=redis://commercebox-redis:6379/0
      - COMMERCEBOX_DB_NAME=${COMMERCEBOX_DB_NAME:-commercebox}
      - COMMERCEBOX_DB_USER=${COMMERCEBOX_DB_USER:-commercebox_user}
      - COMMERCEBOX_DB_PASSWORD=${COMMERCEBOX_DB_PASSWORD:-commercebox_pass}
    restart: unless-stopped
    networks:
      - commercebox_network

  # Celery Worker para tareas asíncronas
  commercebox-celery:
    build: .
    container_name: commercebox_celery
    command: celery -A commercebox worker -l info
    volumes:
      - .:/app
      - ./logs:/app/logs
    depends_on:
      - commercebox-db
      - commercebox-redis
    environment:
      - COMMERCEBOX_DB_HOST=commercebox-db
      - COMMERCEBOX_REDIS_URL=redis://commercebox-redis:6379/0
      - COMMERCEBOX_DB_NAME=${COMMERCEBOX_DB_NAME:-commercebox}
      - COMMERCEBOX_DB_USER=${COMMERCEBOX_DB_USER:-commercebox_user}
      - COMMERCEBOX_DB_PASSWORD=${COMMERCEBOX_DB_PASSWORD:-commercebox_pass}
    restart: unless-stopped
    networks:
      - commercebox_network

  # Celery Beat para tareas programadas
  commercebox-celery-beat:
    build: .
    container_name: commercebox_celery_beat
    command: celery -A commercebox beat -l info
    volumes:
      - .:/app
      - ./logs:/app/logs
    depends_on:
      - commercebox-db
      - commercebox-redis
    environment:
      - COMMERCEBOX_DB_HOST=commercebox-db
      - COMMERCEBOX_REDIS_URL=redis://commercebox-redis:6379/0
      - COMMERCEBOX_DB_NAME=${COMMERCEBOX_DB_NAME:-commercebox}
      - COMMERCEBOX_DB_USER=${COMMERCEBOX_DB_USER:-commercebox_user}
      - COMMERCEBOX_DB_PASSWORD=${COMMERCEBOX_DB_PASSWORD:-commercebox_pass}
    restart: unless-stopped
    networks:
      - commercebox_network

  # Nginx (opcional para producción)
  commercebox-nginx:
    image: nginx:alpine
    container_name: commercebox_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
      - ./static:/app/static
      - ./media:/app/media
    depends_on:
      - commercebox-web
    restart: unless-stopped
    networks:
      - commercebox_network
    profiles:
      - production

volumes:
  commercebox_postgres_data:

networks:
  commercebox_network:
    driver: bridge