# Generated by Django 4.2.7 on 2025-10-12 02:50

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("inventory_management", "0003_agregar_marca"),
        ("stock_alert_system", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="EstadoStock",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "tipo_inventario",
                    models.CharField(
                        choices=[("QUINTAL", "Quintal"), ("NORMAL", "Producto Normal")],
                        db_index=True,
                        max_length=20,
                    ),
                ),
                (
                    "estado_semaforo",
                    models.CharField(
                        choices=[
                            ("NORMAL", "üü¢ Normal - Stock saludable"),
                            ("BAJO", "üü° Bajo - Necesita atenci√≥n"),
                            ("CRITICO", "üî¥ Cr√≠tico - Reorden urgente"),
                            ("AGOTADO", "‚ö´ Agotado - Sin stock"),
                        ],
                        db_index=True,
                        default="NORMAL",
                        help_text="Estado del sem√°foro actual",
                        max_length=20,
                    ),
                ),
                (
                    "total_quintales",
                    models.IntegerField(
                        default=0, help_text="Total de quintales disponibles"
                    ),
                ),
                (
                    "peso_total_disponible",
                    models.DecimalField(
                        decimal_places=3,
                        default=0,
                        help_text="Peso total disponible en todos los quintales",
                        max_digits=12,
                    ),
                ),
                (
                    "peso_total_inicial",
                    models.DecimalField(
                        decimal_places=3,
                        default=0,
                        help_text="Peso inicial total (para calcular porcentaje)",
                        max_digits=12,
                    ),
                ),
                (
                    "porcentaje_disponible",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="% de peso disponible vs inicial",
                        max_digits=5,
                    ),
                ),
                (
                    "stock_actual",
                    models.IntegerField(
                        default=0, help_text="Stock actual en unidades"
                    ),
                ),
                (
                    "stock_minimo",
                    models.IntegerField(
                        default=0, help_text="Stock m√≠nimo configurado"
                    ),
                ),
                (
                    "stock_maximo",
                    models.IntegerField(
                        blank=True, help_text="Stock m√°ximo configurado", null=True
                    ),
                ),
                (
                    "requiere_atencion",
                    models.BooleanField(
                        db_index=True,
                        default=False,
                        help_text="Marca si requiere atenci√≥n inmediata (CR√çTICO o AGOTADO)",
                    ),
                ),
                (
                    "valor_inventario",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Valor monetario del inventario disponible",
                        max_digits=12,
                    ),
                ),
                (
                    "fecha_ultimo_calculo",
                    models.DateTimeField(
                        default=django.utils.timezone.now,
                        help_text="√öltima vez que se calcul√≥ el estado",
                    ),
                ),
                (
                    "fecha_cambio_estado",
                    models.DateTimeField(
                        blank=True,
                        help_text="√öltima vez que cambi√≥ el estado del sem√°foro",
                        null=True,
                    ),
                ),
            ],
            options={
                "verbose_name": "Estado de Stock",
                "verbose_name_plural": "Estados de Stock",
                "db_table": "stock_alert_estado_stock",
                "ordering": ["estado_semaforo", "producto__nombre"],
            },
        ),
        migrations.CreateModel(
            name="HistorialEstado",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("estado_anterior", models.CharField(max_length=20)),
                ("estado_nuevo", models.CharField(max_length=20)),
                ("tipo_inventario", models.CharField(max_length=20)),
                (
                    "stock_anterior",
                    models.DecimalField(decimal_places=3, max_digits=12),
                ),
                ("stock_nuevo", models.DecimalField(decimal_places=3, max_digits=12)),
                (
                    "motivo_cambio",
                    models.CharField(
                        blank=True,
                        help_text="Venta, Ajuste, Compra, etc",
                        max_length=50,
                    ),
                ),
                (
                    "fecha_cambio",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now
                    ),
                ),
            ],
            options={
                "verbose_name": "Historial de Estado",
                "verbose_name_plural": "Historial de Estados",
                "db_table": "stock_alert_historial_estado",
                "ordering": ["-fecha_cambio"],
            },
        ),
        migrations.RenameIndex(
            model_name="alertastock",
            new_name="stock_alert_tipo_al_8e9075_idx",
            old_name="stock_alert_tipo_al_fa2483_idx",
        ),
        migrations.RenameIndex(
            model_name="alertastock",
            new_name="stock_alert_priorid_316f65_idx",
            old_name="stock_alert_priorid_914114_idx",
        ),
        migrations.RenameIndex(
            model_name="alertastock",
            new_name="stock_alert_fecha_c_3d9361_idx",
            old_name="stock_alert_fecha_c_2028b6_idx",
        ),
        migrations.AddField(
            model_name="configuracionalerta",
            name="actualizado_por",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="configuraciones_alertas",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="configuracionalerta",
            name="multiplicador_stock_bajo",
            field=models.DecimalField(
                decimal_places=2,
                default=2.0,
                help_text="Stock bajo = stock_minimo √ó este multiplicador (ej: 2.0 = el doble)",
                max_digits=4,
            ),
        ),
        migrations.AddField(
            model_name="configuracionalerta",
            name="umbral_quintal_bajo",
            field=models.DecimalField(
                decimal_places=2,
                default=25.0,
                help_text="Porcentaje restante para considerar quintal bajo (ej: 25.00 = 25%)",
                max_digits=5,
            ),
        ),
        migrations.AlterField(
            model_name="configuracionalerta",
            name="alertas_activas",
            field=models.BooleanField(
                default=True, help_text="Sistema de alertas activo globalmente"
            ),
        ),
        migrations.AlterField(
            model_name="configuracionalerta",
            name="auto_generar_alertas",
            field=models.BooleanField(
                default=True,
                help_text="Generar alertas autom√°ticamente al detectar cambios",
            ),
        ),
        migrations.AlterField(
            model_name="configuracionalerta",
            name="dias_vencimiento_proximo",
            field=models.IntegerField(
                default=7, help_text="D√≠as antes del vencimiento para generar alerta"
            ),
        ),
        migrations.AlterField(
            model_name="configuracionalerta",
            name="emails_notificacion",
            field=models.JSONField(
                blank=True,
                default=list,
                help_text="Lista de emails para recibir notificaciones",
            ),
        ),
        migrations.AlterField(
            model_name="configuracionalerta",
            name="notificar_email",
            field=models.BooleanField(
                default=True, help_text="Enviar notificaciones por email"
            ),
        ),
        migrations.AlterField(
            model_name="configuracionalerta",
            name="notificar_push",
            field=models.BooleanField(
                default=False, help_text="Enviar notificaciones push (futuro)"
            ),
        ),
        migrations.AlterField(
            model_name="configuracionalerta",
            name="notificar_sms",
            field=models.BooleanField(
                default=False, help_text="Enviar notificaciones SMS (futuro)"
            ),
        ),
        migrations.AlterField(
            model_name="configuracionalerta",
            name="umbral_quintal_critico",
            field=models.DecimalField(
                decimal_places=2,
                default=10.0,
                help_text="Porcentaje restante para considerar quintal cr√≠tico (ej: 10.00 = 10%)",
                max_digits=5,
            ),
        ),
        migrations.AlterField(
            model_name="configuracionalerta",
            name="umbral_stock_bajo",
            field=models.IntegerField(
                default=10,
                help_text="Cantidad para considerar stock bajo en productos normales",
            ),
        ),
        migrations.AlterField(
            model_name="configuracionalerta",
            name="umbral_stock_critico",
            field=models.IntegerField(
                default=5,
                help_text="Cantidad para considerar stock cr√≠tico en productos normales",
            ),
        ),
        migrations.AlterModelTable(
            name="alertastock",
            table="stock_alert_alerta",
        ),
        migrations.AlterModelTable(
            name="configuracionalerta",
            table="stock_alert_configuracion",
        ),
        migrations.AlterModelTable(
            name="historialalerta",
            table="stock_alert_historial",
        ),
        migrations.AddField(
            model_name="historialestado",
            name="estado_stock",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="historial",
                to="stock_alert_system.estadostock",
            ),
        ),
        migrations.AddField(
            model_name="historialestado",
            name="producto",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="historial_estados",
                to="inventory_management.producto",
            ),
        ),
        migrations.AddField(
            model_name="estadostock",
            name="producto",
            field=models.OneToOneField(
                help_text="Producto al que pertenece este estado",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="estado_stock",
                to="inventory_management.producto",
            ),
        ),
        migrations.AddField(
            model_name="alertastock",
            name="estado_stock",
            field=models.ForeignKey(
                blank=True,
                help_text="Estado de stock asociado a esta alerta",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="alertas",
                to="stock_alert_system.estadostock",
            ),
        ),
        migrations.AddIndex(
            model_name="historialestado",
            index=models.Index(
                fields=["producto", "-fecha_cambio"],
                name="stock_alert_product_162a38_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="historialestado",
            index=models.Index(
                fields=["estado_nuevo", "-fecha_cambio"],
                name="stock_alert_estado__acdf85_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="estadostock",
            index=models.Index(
                fields=["estado_semaforo", "requiere_atencion"],
                name="stock_alert_estado__4891c1_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="estadostock",
            index=models.Index(
                fields=["tipo_inventario", "estado_semaforo"],
                name="stock_alert_tipo_in_9d622e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="estadostock",
            index=models.Index(
                fields=["producto", "estado_semaforo"],
                name="stock_alert_product_6e3c22_idx",
            ),
        ),
    ]
