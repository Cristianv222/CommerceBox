# Generated by Django 4.2.7 on 2025-10-23 22:25

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    dependencies = [
        ("sales_management", "0004_alter_devolucion_descripcion"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("inventory_management", "0003_agregar_marca"),
        ("financial_management", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="CuentaPorCobrar",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "numero_cuenta",
                    models.CharField(
                        blank=True,
                        help_text="Número único de la cuenta (CXC-000001)",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(
                        blank=True, help_text="Descripción adicional de la cuenta"
                    ),
                ),
                (
                    "monto_total",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Monto total de la venta a crédito",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                (
                    "monto_pagado",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Total pagado hasta la fecha",
                        max_digits=10,
                    ),
                ),
                (
                    "saldo_pendiente",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Saldo que aún debe el cliente",
                        max_digits=10,
                    ),
                ),
                (
                    "fecha_emision",
                    models.DateField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        help_text="Fecha de emisión de la cuenta",
                    ),
                ),
                (
                    "fecha_vencimiento",
                    models.DateField(
                        db_index=True, help_text="Fecha de vencimiento del crédito"
                    ),
                ),
                (
                    "fecha_pago_completo",
                    models.DateField(
                        blank=True,
                        help_text="Fecha en que se pagó completamente",
                        null=True,
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("PENDIENTE", "🟡 Pendiente"),
                            ("PARCIAL", "🟠 Pago Parcial"),
                            ("PAGADA", "🟢 Pagada"),
                            ("VENCIDA", "🔴 Vencida"),
                            ("CANCELADA", "⚫ Cancelada"),
                        ],
                        db_index=True,
                        default="PENDIENTE",
                        max_length=20,
                    ),
                ),
                (
                    "dias_vencidos",
                    models.IntegerField(
                        default=0,
                        help_text="Días transcurridos desde el vencimiento (si aplica)",
                    ),
                ),
                ("observaciones", models.TextField(blank=True)),
                ("fecha_registro", models.DateTimeField(auto_now_add=True)),
                ("fecha_actualizacion", models.DateTimeField(auto_now=True)),
                (
                    "cliente",
                    models.ForeignKey(
                        help_text="Cliente que debe el pago",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="cuentas_por_cobrar",
                        to="sales_management.cliente",
                    ),
                ),
                (
                    "usuario_registro",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="cuentas_cobrar_registradas",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "venta",
                    models.OneToOneField(
                        help_text="Venta asociada a esta cuenta",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="cuenta_credito",
                        to="sales_management.venta",
                    ),
                ),
            ],
            options={
                "verbose_name": "Cuenta por Cobrar",
                "verbose_name_plural": "Cuentas por Cobrar",
                "db_table": "fin_cuenta_por_cobrar",
                "ordering": ["-fecha_emision"],
            },
        ),
        migrations.CreateModel(
            name="CuentaPorPagar",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "numero_cuenta",
                    models.CharField(
                        blank=True,
                        help_text="Número único de la cuenta (CXP-000001)",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "numero_factura_proveedor",
                    models.CharField(
                        blank=True,
                        help_text="Número de factura del proveedor",
                        max_length=50,
                    ),
                ),
                (
                    "tipo_compra",
                    models.CharField(
                        choices=[
                            ("QUINTAL", "Compra de Quintales"),
                            ("NORMAL", "Compra de Productos Normales"),
                            ("MIXTA", "Compra Mixta"),
                            ("SERVICIO", "Servicio"),
                            ("OTRO", "Otro"),
                        ],
                        default="MIXTA",
                        max_length=20,
                    ),
                ),
                (
                    "descripcion",
                    models.TextField(help_text="Descripción detallada de la compra"),
                ),
                (
                    "monto_total",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Monto total de la compra a crédito",
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                (
                    "monto_pagado",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Total pagado hasta la fecha",
                        max_digits=10,
                    ),
                ),
                (
                    "saldo_pendiente",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Saldo que aún debemos al proveedor",
                        max_digits=10,
                    ),
                ),
                (
                    "fecha_emision",
                    models.DateField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        help_text="Fecha de emisión de la cuenta",
                    ),
                ),
                (
                    "fecha_factura",
                    models.DateField(help_text="Fecha de la factura del proveedor"),
                ),
                (
                    "fecha_vencimiento",
                    models.DateField(
                        db_index=True, help_text="Fecha de vencimiento del crédito"
                    ),
                ),
                (
                    "fecha_pago_completo",
                    models.DateField(
                        blank=True,
                        help_text="Fecha en que se pagó completamente",
                        null=True,
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("PENDIENTE", "🟡 Pendiente"),
                            ("PARCIAL", "🟠 Pago Parcial"),
                            ("PAGADA", "🟢 Pagada"),
                            ("VENCIDA", "🔴 Vencida"),
                            ("CANCELADA", "⚫ Cancelada"),
                        ],
                        db_index=True,
                        default="PENDIENTE",
                        max_length=20,
                    ),
                ),
                (
                    "dias_vencidos",
                    models.IntegerField(
                        default=0,
                        help_text="Días transcurridos desde el vencimiento (si aplica)",
                    ),
                ),
                ("observaciones", models.TextField(blank=True)),
                ("fecha_registro", models.DateTimeField(auto_now_add=True)),
                ("fecha_actualizacion", models.DateTimeField(auto_now=True)),
                (
                    "proveedor",
                    models.ForeignKey(
                        help_text="Proveedor al que se le debe",
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="cuentas_por_pagar",
                        to="inventory_management.proveedor",
                    ),
                ),
                (
                    "usuario_registro",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="cuentas_pagar_registradas",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Cuenta por Pagar",
                "verbose_name_plural": "Cuentas por Pagar",
                "db_table": "fin_cuenta_por_pagar",
                "ordering": ["-fecha_emision"],
            },
        ),
        migrations.CreateModel(
            name="PagoCuentaPorPagar",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "numero_pago",
                    models.CharField(
                        blank=True,
                        help_text="Número único del pago (PPX-000001)",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "monto",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                (
                    "metodo_pago",
                    models.CharField(
                        choices=[
                            ("EFECTIVO", "💵 Efectivo"),
                            ("TRANSFERENCIA", "🏦 Transferencia Bancaria"),
                            ("CHEQUE", "📝 Cheque"),
                            ("DEPOSITO", "🏦 Depósito Bancario"),
                            ("TARJETA_CREDITO", "💳 Tarjeta de Crédito"),
                            ("OTRO", "📦 Otro"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "numero_comprobante",
                    models.CharField(
                        blank=True,
                        help_text="Número de comprobante, voucher, cheque, etc.",
                        max_length=100,
                    ),
                ),
                (
                    "banco",
                    models.CharField(
                        blank=True,
                        help_text="Banco (para transferencias, cheques, etc.)",
                        max_length=100,
                    ),
                ),
                (
                    "numero_cuenta_banco",
                    models.CharField(
                        blank=True, help_text="Número de cuenta bancaria", max_length=50
                    ),
                ),
                ("observaciones", models.TextField(blank=True)),
                (
                    "fecha_pago",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now
                    ),
                ),
                (
                    "cuenta",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="pagos",
                        to="financial_management.cuentaporpagar",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="pagos_cuentas_pagar_registrados",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Pago de Cuenta por Pagar",
                "verbose_name_plural": "Pagos de Cuentas por Pagar",
                "db_table": "fin_pago_cuenta_por_pagar",
                "ordering": ["-fecha_pago"],
                "indexes": [
                    models.Index(
                        fields=["numero_pago"], name="fin_pago_cu_numero__41640d_idx"
                    ),
                    models.Index(
                        fields=["cuenta", "-fecha_pago"],
                        name="fin_pago_cu_cuenta__ebe1bf_idx",
                    ),
                    models.Index(
                        fields=["-fecha_pago"], name="fin_pago_cu_fecha_p_bd6085_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PagoCuentaPorCobrar",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "numero_pago",
                    models.CharField(
                        blank=True,
                        help_text="Número único del pago (PCX-000001)",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "monto",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[django.core.validators.MinValueValidator(0.01)],
                    ),
                ),
                (
                    "metodo_pago",
                    models.CharField(
                        choices=[
                            ("EFECTIVO", "💵 Efectivo"),
                            ("TRANSFERENCIA", "🏦 Transferencia Bancaria"),
                            ("TARJETA_DEBITO", "💳 Tarjeta de Débito"),
                            ("TARJETA_CREDITO", "💳 Tarjeta de Crédito"),
                            ("CHEQUE", "📝 Cheque"),
                            ("DEPOSITO", "🏦 Depósito Bancario"),
                            ("OTRO", "📦 Otro"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "numero_comprobante",
                    models.CharField(
                        blank=True,
                        help_text="Número de comprobante, voucher, cheque, etc.",
                        max_length=100,
                    ),
                ),
                (
                    "banco",
                    models.CharField(
                        blank=True,
                        help_text="Banco (para transferencias, cheques, etc.)",
                        max_length=100,
                    ),
                ),
                (
                    "numero_cuenta_banco",
                    models.CharField(
                        blank=True, help_text="Número de cuenta bancaria", max_length=50
                    ),
                ),
                ("observaciones", models.TextField(blank=True)),
                (
                    "fecha_pago",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now
                    ),
                ),
                (
                    "cuenta",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="pagos",
                        to="financial_management.cuentaporcobrar",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="pagos_cuentas_cobrar_registrados",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Pago de Cuenta por Cobrar",
                "verbose_name_plural": "Pagos de Cuentas por Cobrar",
                "db_table": "fin_pago_cuenta_por_cobrar",
                "ordering": ["-fecha_pago"],
                "indexes": [
                    models.Index(
                        fields=["numero_pago"], name="fin_pago_cu_numero__e0b864_idx"
                    ),
                    models.Index(
                        fields=["cuenta", "-fecha_pago"],
                        name="fin_pago_cu_cuenta__ed646c_idx",
                    ),
                    models.Index(
                        fields=["-fecha_pago"], name="fin_pago_cu_fecha_p_c4c263_idx"
                    ),
                ],
            },
        ),
        migrations.AddIndex(
            model_name="cuentaporpagar",
            index=models.Index(
                fields=["numero_cuenta"], name="fin_cuenta__numero__035cc4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="cuentaporpagar",
            index=models.Index(
                fields=["proveedor", "estado"], name="fin_cuenta__proveed_af3924_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="cuentaporpagar",
            index=models.Index(
                fields=["fecha_vencimiento", "estado"],
                name="fin_cuenta__fecha_v_6f7666_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="cuentaporpagar",
            index=models.Index(
                fields=["estado", "-fecha_emision"],
                name="fin_cuenta__estado_100f04_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="cuentaporcobrar",
            index=models.Index(
                fields=["numero_cuenta"], name="fin_cuenta__numero__e64c89_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="cuentaporcobrar",
            index=models.Index(
                fields=["cliente", "estado"], name="fin_cuenta__cliente_ed3742_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="cuentaporcobrar",
            index=models.Index(
                fields=["fecha_vencimiento", "estado"],
                name="fin_cuenta__fecha_v_df951e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="cuentaporcobrar",
            index=models.Index(
                fields=["estado", "-fecha_emision"],
                name="fin_cuenta__estado_ec214b_idx",
            ),
        ),
    ]
