# Generated by Django 4.2.7 on 2025-10-01 03:14

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("inventory_management", "0001_initial"),
        ("financial_management", "0001_initial"),
        ("sales_management", "0001_initial"),
    ]

    operations = [
        # ========================================
        # 1. CREAR MODELOS NUEVOS
        # ========================================
        migrations.CreateModel(
            name="Cliente",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("tipo_documento", models.CharField(choices=[("CEDULA", "Cédula"), ("RUC", "RUC"), ("PASAPORTE", "Pasaporte")], max_length=20)),
                ("numero_documento", models.CharField(db_index=True, max_length=20, unique=True)),
                ("nombres", models.CharField(max_length=100)),
                ("apellidos", models.CharField(max_length=100)),
                ("nombre_comercial", models.CharField(blank=True, help_text="Para clientes mayoristas/empresas", max_length=200)),
                ("telefono", models.CharField(blank=True, max_length=20)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("direccion", models.TextField(blank=True)),
                ("tipo_cliente", models.CharField(choices=[("FRECUENTE", "Cliente Frecuente"), ("OCASIONAL", "Cliente Ocasional"), ("MAYORISTA", "Cliente Mayorista")], default="OCASIONAL", max_length=20)),
                ("limite_credito", models.DecimalField(decimal_places=2, default=0, help_text="Límite de crédito disponible", max_digits=10)),
                ("credito_disponible", models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ("dias_credito", models.IntegerField(default=0)),
                ("descuento_general", models.DecimalField(decimal_places=2, default=0, help_text="Descuento general en % para este cliente", max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ("activo", models.BooleanField(default=True)),
                ("fecha_registro", models.DateTimeField(auto_now_add=True)),
                ("fecha_ultima_compra", models.DateTimeField(blank=True, null=True)),
                ("total_compras", models.DecimalField(decimal_places=2, default=0, help_text="Total acumulado de compras", max_digits=12)),
            ],
            options={
                "verbose_name": "Cliente",
                "verbose_name_plural": "Clientes",
                "db_table": "sales_cliente",
                "ordering": ["apellidos", "nombres"],
            },
        ),
        
        migrations.CreateModel(
            name="Pago",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("forma_pago", models.CharField(choices=[("EFECTIVO", "Efectivo"), ("TARJETA_DEBITO", "Tarjeta de Débito"), ("TARJETA_CREDITO", "Tarjeta de Crédito"), ("TRANSFERENCIA", "Transferencia Bancaria"), ("CHEQUE", "Cheque"), ("CREDITO", "Crédito")], max_length=20)),
                ("monto", models.DecimalField(decimal_places=2, max_digits=10)),
                ("numero_referencia", models.CharField(blank=True, help_text="Número de autorización, voucher, cheque, etc", max_length=100)),
                ("banco", models.CharField(blank=True, max_length=100)),
                ("fecha_pago", models.DateTimeField(default=django.utils.timezone.now)),
            ],
            options={
                "verbose_name": "Pago",
                "verbose_name_plural": "Pagos",
                "db_table": "sales_pago",
                "ordering": ["-fecha_pago"],
            },
        ),
        
        migrations.CreateModel(
            name="DetalleVenta",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("peso_vendido", models.DecimalField(blank=True, decimal_places=3, help_text="Peso vendido si es quintal", max_digits=10, null=True)),
                ("precio_por_unidad_peso", models.DecimalField(blank=True, decimal_places=4, help_text="Precio por unidad de peso al momento de la venta", max_digits=10, null=True)),
                ("cantidad_unidades", models.IntegerField(blank=True, help_text="Cantidad de unidades si es producto normal", null=True)),
                ("precio_unitario", models.DecimalField(blank=True, decimal_places=2, help_text="Precio por unidad al momento de la venta", max_digits=10, null=True)),
                ("descuento_porcentaje", models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ("descuento_monto", models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ("subtotal", models.DecimalField(decimal_places=2, help_text="Monto antes del descuento", max_digits=10)),
                ("total", models.DecimalField(decimal_places=2, help_text="Monto después del descuento", max_digits=10)),
                ("costo_unitario", models.DecimalField(decimal_places=4, help_text="Costo al momento de la venta (para rentabilidad)", max_digits=10)),
                ("costo_total", models.DecimalField(decimal_places=2, help_text="Costo total del item vendido", max_digits=10)),
                ("orden", models.IntegerField(default=0)),
            ],
            options={
                "verbose_name": "Detalle de Venta",
                "verbose_name_plural": "Detalles de Venta",
                "db_table": "sales_detalle_venta",
                "ordering": ["venta", "orden"],
            },
        ),
        
        migrations.CreateModel(
            name="Devolucion",
            fields=[
                ("id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("numero_devolucion", models.CharField(help_text="Número único de devolución (DEV-2025-00001)", max_length=20, unique=True)),
                ("cantidad_devuelta", models.DecimalField(decimal_places=3, help_text="Peso o unidades devueltas", max_digits=10)),
                ("monto_devolucion", models.DecimalField(decimal_places=2, max_digits=10)),
                ("motivo", models.CharField(choices=[("DEFECTUOSO", "Producto Defectuoso"), ("EQUIVOCACION", "Equivocación en venta"), ("NO_SATISFECHO", "Cliente no satisfecho"), ("VENCIDO", "Producto vencido"), ("OTRO", "Otro motivo")], max_length=20)),
                ("descripcion", models.TextField()),
                ("estado", models.CharField(choices=[("PENDIENTE", "Pendiente de procesar"), ("APROBADA", "Aprobada"), ("RECHAZADA", "Rechazada")], default="PENDIENTE", max_length=20)),
                ("fecha_devolucion", models.DateTimeField(default=django.utils.timezone.now)),
                ("fecha_procesado", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "verbose_name": "Devolución",
                "verbose_name_plural": "Devoluciones",
                "db_table": "sales_devolucion",
                "ordering": ["-fecha_devolucion"],
            },
        ),
        
        # ========================================
        # 2. MODIFICAR OPCIONES DE MODELOS
        # ========================================
        migrations.AlterModelOptions(
            name="venta",
            options={
                "ordering": ["-fecha_venta"],
                "verbose_name": "Venta",
                "verbose_name_plural": "Ventas",
            },
        ),
        
        # ========================================
        # 3. AGREGAR CAMPOS A VENTA (INCLUYENDO CLIENTE)
        # ========================================
        migrations.AddField(
            model_name="venta",
            name="cliente",
            field=models.ForeignKey(blank=True, help_text="Cliente (opcional para ventas al público)", null=True, on_delete=django.db.models.deletion.PROTECT, related_name="ventas", to="sales_management.cliente"),
        ),
        migrations.AddField(
            model_name="venta",
            name="caja",
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name="ventas", to="financial_management.caja"),
        ),
        migrations.AddField(
            model_name="venta",
            name="cambio",
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
        ),
        migrations.AddField(
            model_name="venta",
            name="descuento",
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
        ),
        migrations.AddField(
            model_name="venta",
            name="estado",
            field=models.CharField(choices=[("PENDIENTE", "Pendiente"), ("COMPLETADA", "Completada"), ("ANULADA", "Anulada")], db_index=True, default="PENDIENTE", max_length=20),
        ),
        migrations.AddField(
            model_name="venta",
            name="factura_electronica_clave",
            field=models.CharField(blank=True, help_text="Clave de acceso factura electrónica", max_length=100),
        ),
        migrations.AddField(
            model_name="venta",
            name="factura_electronica_enviada",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="venta",
            name="factura_electronica_xml",
            field=models.TextField(blank=True, help_text="XML de la factura electrónica"),
        ),
        migrations.AddField(
            model_name="venta",
            name="fecha_actualizacion",
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name="venta",
            name="fecha_creacion",
            field=models.DateTimeField(auto_now_add=True, default=datetime.datetime(2025, 10, 1, 3, 14, 43, 392509, tzinfo=datetime.timezone.utc)),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name="venta",
            name="fecha_vencimiento",
            field=models.DateField(blank=True, help_text="Fecha de vencimiento si es crédito", null=True),
        ),
        migrations.AddField(
            model_name="venta",
            name="impuestos",
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
        ),
        migrations.AddField(
            model_name="venta",
            name="monto_pagado",
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
        ),
        migrations.AddField(
            model_name="venta",
            name="numero_factura",
            field=models.CharField(blank=True, db_index=True, help_text="Número de factura física/electrónica", max_length=50),
        ),
        migrations.AddField(
            model_name="venta",
            name="observaciones",
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name="venta",
            name="subtotal",
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
        ),
        migrations.AddField(
            model_name="venta",
            name="tipo_venta",
            field=models.CharField(choices=[("CONTADO", "Contado"), ("CREDITO", "Crédito")], default="CONTADO", max_length=20),
        ),
        migrations.AddField(
            model_name="venta",
            name="vendedor",
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name="ventas_realizadas", to=settings.AUTH_USER_MODEL),
            preserve_default=False,
        ),
        
        # ========================================
        # 4. MODIFICAR CAMPOS EXISTENTES
        # ========================================
        migrations.AlterField(
            model_name="venta",
            name="fecha_venta",
            field=models.DateTimeField(db_index=True, default=django.utils.timezone.now),
        ),
        migrations.AlterField(
            model_name="venta",
            name="numero_venta",
            field=models.CharField(db_index=True, help_text="Número único de venta (VNT-2025-00001)", max_length=20, unique=True),
        ),
        
        # ========================================
        # 5. AGREGAR CAMPOS A OTROS MODELOS
        # ========================================
        migrations.AddField(
            model_name="pago",
            name="usuario",
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name="pago",
            name="venta",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="pagos", to="sales_management.venta"),
        ),
        
        migrations.AddField(
            model_name="devolucion",
            name="detalle_venta",
            field=models.ForeignKey(help_text="Item específico que se devuelve", on_delete=django.db.models.deletion.PROTECT, to="sales_management.detalleventa"),
        ),
        migrations.AddField(
            model_name="devolucion",
            name="usuario_aprueba",
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name="devoluciones_aprobadas", to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name="devolucion",
            name="usuario_solicita",
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name="devoluciones_solicitadas", to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name="devolucion",
            name="venta_original",
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name="devoluciones", to="sales_management.venta"),
        ),
        
        migrations.AddField(
            model_name="detalleventa",
            name="producto",
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="inventory_management.producto"),
        ),
        migrations.AddField(
            model_name="detalleventa",
            name="quintal",
            field=models.ForeignKey(blank=True, help_text="Quintal específico del que se vendió (FIFO)", null=True, on_delete=django.db.models.deletion.PROTECT, to="inventory_management.quintal"),
        ),
        migrations.AddField(
            model_name="detalleventa",
            name="unidad_medida",
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to="inventory_management.unidadmedida"),
        ),
        migrations.AddField(
            model_name="detalleventa",
            name="venta",
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="detalles", to="sales_management.venta"),
        ),
        
        # ========================================
        # 6. CREAR ÍNDICES (AL FINAL)
        # ========================================
        migrations.AddIndex(
            model_name="cliente",
            index=models.Index(fields=["numero_documento"], name="sales_clien_numero__98b8fc_idx"),
        ),
        migrations.AddIndex(
            model_name="cliente",
            index=models.Index(fields=["tipo_cliente", "activo"], name="sales_clien_tipo_cl_92f8f1_idx"),
        ),
        
        migrations.AddIndex(
            model_name="venta",
            index=models.Index(fields=["numero_venta"], name="sales_venta_numero__c2f714_idx"),
        ),
        migrations.AddIndex(
            model_name="venta",
            index=models.Index(fields=["numero_factura"], name="sales_venta_numero__a2be34_idx"),
        ),
        migrations.AddIndex(
            model_name="venta",
            index=models.Index(fields=["-fecha_venta", "estado"], name="sales_venta_fecha_v_bb2a8c_idx"),
        ),
        migrations.AddIndex(
            model_name="venta",
            index=models.Index(fields=["cliente", "-fecha_venta"], name="sales_venta_cliente_93fb7d_idx"),
        ),
        migrations.AddIndex(
            model_name="venta",
            index=models.Index(fields=["vendedor", "-fecha_venta"], name="sales_venta_vendedo_1522de_idx"),
        ),
        
        migrations.AddIndex(
            model_name="detalleventa",
            index=models.Index(fields=["venta", "orden"], name="sales_detal_venta_i_a69060_idx"),
        ),
        migrations.AddIndex(
            model_name="detalleventa",
            index=models.Index(fields=["producto"], name="sales_detal_product_7caff0_idx"),
        ),
    ]