# Generated by Django 4.2.7 on 2025-10-19 21:31

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("inventory_management", "0003_agregar_marca"),
        ("sales_management", "0004_alter_devolucion_descripcion"),
        ("hardware_integration", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="TrabajoImpresion",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "tipo",
                    models.CharField(
                        choices=[
                            ("TICKET", "Ticket de Venta"),
                            ("FACTURA", "Factura"),
                            ("ETIQUETA", "Etiqueta de Producto"),
                            ("CODIGO_BARRAS", "C√≥digo de Barras"),
                            ("REPORTE", "Reporte"),
                            ("PRUEBA", "P√°gina de Prueba"),
                        ],
                        default="TICKET",
                        max_length=20,
                    ),
                ),
                (
                    "prioridad",
                    models.IntegerField(
                        choices=[(1, "üî¥ Alta"), (2, "üü° Media"), (3, "üü¢ Baja")],
                        default=2,
                        help_text="Prioridad del trabajo (1=Alta, 3=Baja)",
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("PENDIENTE", "‚è≥ Pendiente"),
                            ("PROCESANDO", "‚öôÔ∏è Procesando"),
                            ("COMPLETADO", "‚úÖ Completado"),
                            ("ERROR", "‚ùå Error"),
                            ("CANCELADO", "üö´ Cancelado"),
                        ],
                        default="PENDIENTE",
                        max_length=20,
                    ),
                ),
                (
                    "datos_impresion",
                    models.TextField(
                        help_text="Contenido a imprimir (comandos ESC/POS, ZPL, etc)"
                    ),
                ),
                (
                    "formato",
                    models.CharField(
                        default="ESC_POS",
                        help_text="Formato de los datos (ESC_POS, ZPL, PDF, etc)",
                        max_length=20,
                    ),
                ),
                (
                    "intentos",
                    models.IntegerField(
                        default=0, help_text="N√∫mero de intentos realizados"
                    ),
                ),
                (
                    "max_intentos",
                    models.IntegerField(
                        default=3, help_text="M√°ximo n√∫mero de intentos"
                    ),
                ),
                (
                    "mensaje_error",
                    models.TextField(blank=True, help_text="√öltimo mensaje de error"),
                ),
                (
                    "historial_errores",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Historial de todos los errores",
                    ),
                ),
                (
                    "abrir_gaveta",
                    models.BooleanField(
                        default=False, help_text="Abrir gaveta despu√©s de imprimir"
                    ),
                ),
                (
                    "copias",
                    models.IntegerField(
                        default=1,
                        help_text="N√∫mero de copias a imprimir",
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(10),
                        ],
                    ),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Informaci√≥n adicional del trabajo",
                    ),
                ),
                (
                    "fecha_creacion",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "fecha_asignacion",
                    models.DateTimeField(
                        blank=True,
                        help_text="Cuando el agente tom√≥ el trabajo",
                        null=True,
                    ),
                ),
                (
                    "fecha_completado",
                    models.DateTimeField(
                        blank=True,
                        help_text="Cuando se complet√≥ exitosamente",
                        null=True,
                    ),
                ),
                (
                    "tiempo_procesamiento",
                    models.IntegerField(
                        blank=True, help_text="Tiempo de procesamiento en ms", null=True
                    ),
                ),
                (
                    "creado_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="trabajos_impresion_creados",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "impresora",
                    models.ForeignKey(
                        blank=True,
                        help_text="Impresora espec√≠fica (null = usar predeterminada)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="trabajos_pendientes",
                        to="hardware_integration.impresora",
                    ),
                ),
                (
                    "producto",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="trabajos_impresion",
                        to="inventory_management.producto",
                    ),
                ),
                (
                    "venta",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="trabajos_impresion",
                        to="sales_management.venta",
                    ),
                ),
            ],
            options={
                "verbose_name": "Trabajo de Impresi√≥n",
                "verbose_name_plural": "Trabajos de Impresi√≥n",
                "db_table": "hw_trabajo_impresion",
                "ordering": ["prioridad", "fecha_creacion"],
                "indexes": [
                    models.Index(
                        fields=["estado", "prioridad", "fecha_creacion"],
                        name="hw_trabajo__estado_f094c7_idx",
                    ),
                    models.Index(
                        fields=["impresora", "estado"],
                        name="hw_trabajo__impreso_97a53f_idx",
                    ),
                    models.Index(
                        fields=["venta"], name="hw_trabajo__venta_i_66936f_idx"
                    ),
                ],
            },
        ),
    ]
