# Generated by Django 4.2.7 on 2025-09-29 03:53

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Usuario",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "codigo_empleado",
                    models.CharField(
                        max_length=10,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^[A-Z0-9]{4,10}$",
                                "Formato: 4-10 caracteres alfanuméricos en mayúsculas",
                            )
                        ],
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="Correo electrónico"
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        max_length=30, unique=True, verbose_name="Nombre de usuario"
                    ),
                ),
                ("nombres", models.CharField(max_length=100, verbose_name="Nombres")),
                (
                    "apellidos",
                    models.CharField(max_length=100, verbose_name="Apellidos"),
                ),
                (
                    "telefono",
                    models.CharField(
                        blank=True,
                        max_length=15,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\+?1?\\d{9,15}$", "Formato de teléfono inválido"
                            )
                        ],
                    ),
                ),
                (
                    "documento_identidad",
                    models.CharField(
                        max_length=20,
                        unique=True,
                        verbose_name="Documento de identidad",
                    ),
                ),
                (
                    "rol",
                    models.CharField(
                        choices=[
                            ("ADMIN", "Administrador"),
                            ("SUPERVISOR", "Supervisor"),
                            ("VENDEDOR", "Vendedor"),
                            ("CAJERO", "Cajero"),
                        ],
                        default="VENDEDOR",
                        max_length=20,
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("ACTIVO", "Activo"),
                            ("INACTIVO", "Inactivo"),
                            ("SUSPENDIDO", "Suspendido"),
                            ("BLOQUEADO", "Bloqueado"),
                        ],
                        default="ACTIVO",
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                (
                    "date_joined",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("fecha_ultimo_acceso", models.DateTimeField(blank=True, null=True)),
                (
                    "fecha_cambio_password",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("intentos_fallidos", models.PositiveIntegerField(default=0)),
                ("fecha_bloqueo", models.DateTimeField(blank=True, null=True)),
                ("token_recuperacion", models.CharField(blank=True, max_length=100)),
                ("fecha_expiracion_token", models.DateTimeField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Usuario",
                "verbose_name_plural": "Usuarios",
                "db_table": "auth_usuario",
                "ordering": ["apellidos", "nombres"],
            },
        ),
        migrations.CreateModel(
            name="SesionUsuario",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("token_session", models.CharField(max_length=255, unique=True)),
                ("ip_address", models.GenericIPAddressField()),
                ("user_agent", models.TextField()),
                (
                    "fecha_inicio",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "fecha_ultimo_acceso",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("activa", models.BooleanField(default=True)),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sesiones",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Sesión de usuario",
                "verbose_name_plural": "Sesiones de usuario",
                "ordering": ["-fecha_ultimo_acceso"],
            },
        ),
        migrations.CreateModel(
            name="PermisoPersonalizado",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("modulo", models.CharField(max_length=50)),
                ("accion", models.CharField(max_length=50)),
                ("activo", models.BooleanField(default=True)),
                (
                    "fecha_asignacion",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("fecha_expiracion", models.DateTimeField(blank=True, null=True)),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="permisos_personalizados",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Permiso personalizado",
                "verbose_name_plural": "Permisos personalizados",
                "unique_together": {("usuario", "modulo", "accion")},
            },
        ),
        migrations.CreateModel(
            name="LogAcceso",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "email_intento",
                    models.EmailField(blank=True, max_length=254, null=True),
                ),
                (
                    "tipo_evento",
                    models.CharField(
                        choices=[
                            ("LOGIN", "Inicio de sesión"),
                            ("LOGOUT", "Cierre de sesión"),
                            ("LOGIN_FAILED", "Intento de inicio fallido"),
                            ("PASSWORD_CHANGE", "Cambio de contraseña"),
                            ("ACCOUNT_LOCKED", "Cuenta bloqueada"),
                            ("PERMISSION_DENIED", "Permiso denegado"),
                        ],
                        max_length=20,
                    ),
                ),
                ("ip_address", models.GenericIPAddressField()),
                ("user_agent", models.TextField()),
                ("detalles", models.TextField(blank=True)),
                (
                    "fecha_evento",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                ("exitoso", models.BooleanField(default=True)),
                (
                    "usuario",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Log de acceso",
                "verbose_name_plural": "Logs de acceso",
                "ordering": ["-fecha_evento"],
                "indexes": [
                    models.Index(
                        fields=["usuario", "fecha_evento"],
                        name="authenticat_usuario_cb3a5b_idx",
                    ),
                    models.Index(
                        fields=["tipo_evento", "fecha_evento"],
                        name="authenticat_tipo_ev_4605ea_idx",
                    ),
                    models.Index(
                        fields=["ip_address", "fecha_evento"],
                        name="authenticat_ip_addr_8b6c0a_idx",
                    ),
                ],
            },
        ),
    ]
