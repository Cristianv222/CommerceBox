# Generated by Django 4.2.7 on 2025-10-12 17:19

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="PlantillaNotificacion",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("codigo", models.CharField(max_length=50, unique=True)),
                ("nombre", models.CharField(max_length=100)),
                ("descripcion", models.TextField(blank=True)),
                (
                    "tipo_plantilla",
                    models.CharField(
                        choices=[
                            ("WEB", "Notificación Web"),
                            ("EMAIL", "Email HTML"),
                            ("SMS", "Mensaje SMS"),
                            ("PUSH", "Push Notification"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "asunto",
                    models.CharField(
                        blank=True,
                        help_text="Asunto del email o título de la notificación",
                        max_length=200,
                    ),
                ),
                (
                    "cuerpo",
                    models.TextField(
                        help_text="Contenido con variables: {{producto}}, {{cantidad}}, etc"
                    ),
                ),
                (
                    "variables_disponibles",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text='Lista de variables que se pueden usar: ["producto", "cantidad", "usuario"]',
                    ),
                ),
                ("activa", models.BooleanField(default=True)),
                ("fecha_creacion", models.DateTimeField(auto_now_add=True)),
                ("fecha_actualizacion", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Plantilla de Notificación",
                "verbose_name_plural": "Plantillas de Notificación",
                "db_table": "notif_plantilla",
                "ordering": ["nombre"],
            },
        ),
        migrations.CreateModel(
            name="TipoNotificacion",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "codigo",
                    models.CharField(
                        help_text="Código único del tipo de notificación (ej: STOCK_CRITICO)",
                        max_length=50,
                        unique=True,
                    ),
                ),
                ("nombre", models.CharField(max_length=100)),
                ("descripcion", models.TextField(blank=True)),
                (
                    "categoria",
                    models.CharField(
                        choices=[
                            ("STOCK", "📦 Stock e Inventario"),
                            ("VENTAS", "🛒 Ventas"),
                            ("FINANCIERO", "💰 Financiero"),
                            ("SISTEMA", "⚙️ Sistema"),
                            ("USUARIO", "👤 Usuario"),
                        ],
                        db_index=True,
                        max_length=20,
                    ),
                ),
                (
                    "prioridad_default",
                    models.CharField(
                        choices=[
                            ("BAJA", "Baja"),
                            ("MEDIA", "Media"),
                            ("ALTA", "Alta"),
                            ("CRITICA", "Crítica"),
                        ],
                        default="MEDIA",
                        max_length=10,
                    ),
                ),
                (
                    "plantilla_titulo",
                    models.CharField(
                        help_text="Plantilla con variables: {producto}, {cantidad}, etc",
                        max_length=200,
                    ),
                ),
                (
                    "plantilla_mensaje",
                    models.TextField(
                        help_text="Plantilla HTML o texto para el mensaje"
                    ),
                ),
                (
                    "requiere_accion",
                    models.BooleanField(
                        default=False,
                        help_text="La notificación requiere acción del usuario",
                    ),
                ),
                ("enviar_email", models.BooleanField(default=False)),
                ("enviar_push", models.BooleanField(default=False)),
                ("enviar_sms", models.BooleanField(default=False)),
                (
                    "roles_destinatarios",
                    models.JSONField(
                        default=list,
                        help_text="Lista de códigos de roles que reciben esta notificación",
                    ),
                ),
                ("activo", models.BooleanField(default=True)),
                ("fecha_creacion", models.DateTimeField(auto_now_add=True)),
                ("fecha_actualizacion", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Tipo de Notificación",
                "verbose_name_plural": "Tipos de Notificación",
                "db_table": "notif_tipo_notificacion",
                "ordering": ["categoria", "nombre"],
                "indexes": [
                    models.Index(
                        fields=["codigo", "activo"],
                        name="notif_tipo__codigo_959b65_idx",
                    ),
                    models.Index(
                        fields=["categoria", "prioridad_default"],
                        name="notif_tipo__categor_8ab402_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="PreferenciasNotificacion",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("recibir_notificaciones_web", models.BooleanField(default=True)),
                ("recibir_notificaciones_email", models.BooleanField(default=True)),
                ("recibir_notificaciones_push", models.BooleanField(default=False)),
                ("recibir_notificaciones_sms", models.BooleanField(default=False)),
                ("notif_stock", models.BooleanField(default=True)),
                ("notif_ventas", models.BooleanField(default=True)),
                ("notif_financiero", models.BooleanField(default=True)),
                ("notif_sistema", models.BooleanField(default=True)),
                (
                    "agrupar_notificaciones",
                    models.BooleanField(
                        default=True, help_text="Agrupar notificaciones similares"
                    ),
                ),
                (
                    "solo_prioridad_alta",
                    models.BooleanField(
                        default=False,
                        help_text="Recibir solo notificaciones de prioridad alta o crítica",
                    ),
                ),
                ("no_molestar_activo", models.BooleanField(default=False)),
                ("no_molestar_desde", models.TimeField(blank=True, null=True)),
                ("no_molestar_hasta", models.TimeField(blank=True, null=True)),
                ("fecha_actualizacion", models.DateTimeField(auto_now=True)),
                (
                    "usuario",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="preferencias_notificaciones",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Preferencias de Notificación",
                "verbose_name_plural": "Preferencias de Notificaciones",
                "db_table": "notif_preferencias",
            },
        ),
        migrations.CreateModel(
            name="NotificacionProgramada",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("nombre", models.CharField(max_length=200)),
                ("descripcion", models.TextField(blank=True)),
                (
                    "frecuencia",
                    models.CharField(
                        choices=[
                            ("UNA_VEZ", "Una sola vez"),
                            ("DIARIA", "Diaria"),
                            ("SEMANAL", "Semanal"),
                            ("MENSUAL", "Mensual"),
                        ],
                        default="UNA_VEZ",
                        max_length=20,
                    ),
                ),
                (
                    "fecha_proxima_ejecucion",
                    models.DateTimeField(
                        help_text="Próxima vez que se enviará la notificación"
                    ),
                ),
                (
                    "hora_ejecucion",
                    models.TimeField(
                        blank=True,
                        help_text="Hora del día para enviar (para notificaciones recurrentes)",
                        null=True,
                    ),
                ),
                (
                    "roles",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Enviar a usuarios con estos roles",
                    ),
                ),
                ("titulo_personalizado", models.CharField(blank=True, max_length=200)),
                ("mensaje_personalizado", models.TextField(blank=True)),
                ("activa", models.BooleanField(default=True)),
                ("ultima_ejecucion", models.DateTimeField(blank=True, null=True)),
                ("total_ejecuciones", models.IntegerField(default=0)),
                ("fecha_creacion", models.DateTimeField(auto_now_add=True)),
                (
                    "creado_por",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="notificaciones_programadas_creadas",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tipo_notificacion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notificaciones_programadas",
                        to="notifications.tiponotificacion",
                    ),
                ),
                (
                    "usuarios",
                    models.ManyToManyField(
                        blank=True,
                        related_name="notificaciones_programadas",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Notificación Programada",
                "verbose_name_plural": "Notificaciones Programadas",
                "db_table": "notif_programada",
                "ordering": ["fecha_proxima_ejecucion"],
            },
        ),
        migrations.CreateModel(
            name="Notificacion",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "prioridad",
                    models.CharField(
                        choices=[
                            ("BAJA", "Baja"),
                            ("MEDIA", "Media"),
                            ("ALTA", "Alta"),
                            ("CRITICA", "Crítica"),
                        ],
                        db_index=True,
                        default="MEDIA",
                        max_length=10,
                    ),
                ),
                ("titulo", models.CharField(max_length=200)),
                ("mensaje", models.TextField()),
                (
                    "datos_adicionales",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Datos extra en JSON (producto_id, quintal_id, etc)",
                    ),
                ),
                (
                    "object_id",
                    models.UUIDField(
                        blank=True, help_text="ID del objeto relacionado", null=True
                    ),
                ),
                (
                    "url_accion",
                    models.CharField(
                        blank=True,
                        help_text="URL para ver detalles o tomar acción",
                        max_length=500,
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("PENDIENTE", "Pendiente de enviar"),
                            ("ENVIADA", "Enviada correctamente"),
                            ("LEIDA", "Leída por el usuario"),
                            ("DESCARTADA", "Descartada por el usuario"),
                            ("ERROR", "Error al enviar"),
                        ],
                        db_index=True,
                        default="PENDIENTE",
                        max_length=20,
                    ),
                ),
                (
                    "requiere_accion",
                    models.BooleanField(
                        default=False,
                        help_text="La notificación requiere acción del usuario",
                    ),
                ),
                ("accion_tomada", models.BooleanField(default=False)),
                ("enviada_web", models.BooleanField(default=False)),
                ("enviada_email", models.BooleanField(default=False)),
                ("enviada_push", models.BooleanField(default=False)),
                ("enviada_sms", models.BooleanField(default=False)),
                (
                    "fecha_creacion",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now
                    ),
                ),
                ("fecha_envio", models.DateTimeField(blank=True, null=True)),
                ("fecha_lectura", models.DateTimeField(blank=True, null=True)),
                (
                    "fecha_expiracion",
                    models.DateTimeField(
                        blank=True,
                        help_text="Fecha después de la cual la notificación no es relevante",
                        null=True,
                    ),
                ),
                ("error_mensaje", models.TextField(blank=True)),
                ("intentos_envio", models.IntegerField(default=0)),
                (
                    "content_type",
                    models.ForeignKey(
                        blank=True,
                        help_text="Tipo de objeto relacionado",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "tipo_notificacion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="notificaciones",
                        to="notifications.tiponotificacion",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notificaciones",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Notificación",
                "verbose_name_plural": "Notificaciones",
                "db_table": "notif_notificacion",
                "ordering": ["-fecha_creacion"],
            },
        ),
        migrations.CreateModel(
            name="LogNotificacion",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "canal",
                    models.CharField(
                        choices=[
                            ("WEB", "Web"),
                            ("EMAIL", "Email"),
                            ("SMS", "SMS"),
                            ("PUSH", "Push"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "resultado",
                    models.CharField(
                        choices=[
                            ("EXITOSO", "Enviado exitosamente"),
                            ("ERROR", "Error al enviar"),
                            ("RECHAZADO", "Rechazado por el servidor"),
                            ("REBOTADO", "Email rebotado"),
                        ],
                        max_length=20,
                    ),
                ),
                ("destinatario", models.CharField(max_length=255)),
                ("mensaje_error", models.TextField(blank=True)),
                (
                    "datos_respuesta",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="Respuesta del servidor (ej: message_id de email)",
                    ),
                ),
                (
                    "fecha_intento",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "tiempo_respuesta",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        help_text="Tiempo de respuesta en segundos",
                        max_digits=6,
                        null=True,
                    ),
                ),
                (
                    "notificacion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="logs",
                        to="notifications.notificacion",
                    ),
                ),
            ],
            options={
                "verbose_name": "Log de Notificación",
                "verbose_name_plural": "Logs de Notificaciones",
                "db_table": "notif_log",
                "ordering": ["-fecha_intento"],
            },
        ),
        migrations.CreateModel(
            name="ConfiguracionNotificacion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "notificaciones_activas",
                    models.BooleanField(
                        default=True,
                        help_text="Sistema de notificaciones activo globalmente",
                    ),
                ),
                (
                    "email_activo",
                    models.BooleanField(
                        default=True, help_text="Enviar notificaciones por email"
                    ),
                ),
                (
                    "email_host",
                    models.CharField(
                        blank=True, default="smtp.gmail.com", max_length=255
                    ),
                ),
                ("email_puerto", models.IntegerField(default=587)),
                ("email_usuario", models.EmailField(blank=True, max_length=254)),
                ("email_password", models.CharField(blank=True, max_length=255)),
                ("email_remitente", models.EmailField(blank=True, max_length=254)),
                (
                    "sms_activo",
                    models.BooleanField(
                        default=False,
                        help_text="Enviar notificaciones SMS (requiere integración)",
                    ),
                ),
                ("sms_proveedor", models.CharField(blank=True, max_length=50)),
                ("sms_api_key", models.CharField(blank=True, max_length=255)),
                (
                    "push_activo",
                    models.BooleanField(
                        default=False, help_text="Enviar notificaciones push"
                    ),
                ),
                ("notif_stock_critico", models.BooleanField(default=True)),
                ("notif_stock_bajo", models.BooleanField(default=True)),
                ("notif_stock_agotado", models.BooleanField(default=True)),
                ("notif_vencimiento_proximo", models.BooleanField(default=True)),
                ("notif_venta_grande", models.BooleanField(default=True)),
                (
                    "notif_venta_grande_monto",
                    models.DecimalField(
                        decimal_places=2,
                        default=500,
                        help_text="Monto mínimo para notificar venta grande",
                        max_digits=10,
                    ),
                ),
                ("notif_descuento_excesivo", models.BooleanField(default=True)),
                (
                    "notif_descuento_excesivo_porcentaje",
                    models.DecimalField(
                        decimal_places=2,
                        default=20,
                        help_text="% de descuento para generar alerta",
                        max_digits=5,
                    ),
                ),
                ("notif_devolucion", models.BooleanField(default=True)),
                ("notif_caja_chica_baja", models.BooleanField(default=True)),
                (
                    "notif_caja_chica_limite",
                    models.DecimalField(
                        decimal_places=2,
                        default=50,
                        help_text="Monto mínimo de caja chica para alertar",
                        max_digits=10,
                    ),
                ),
                ("notif_diferencia_arqueo", models.BooleanField(default=True)),
                (
                    "notif_diferencia_arqueo_monto",
                    models.DecimalField(
                        decimal_places=2,
                        default=10,
                        help_text="Diferencia mínima en arqueo para alertar",
                        max_digits=10,
                    ),
                ),
                ("notif_error_sistema", models.BooleanField(default=True)),
                ("notif_backup_completado", models.BooleanField(default=True)),
                ("notif_hardware_error", models.BooleanField(default=True)),
                (
                    "emails_administradores",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Lista de emails de administradores",
                    ),
                ),
                (
                    "emails_supervisores",
                    models.JSONField(
                        blank=True,
                        default=list,
                        help_text="Lista de emails de supervisores",
                    ),
                ),
                ("fecha_creacion", models.DateTimeField(auto_now_add=True)),
                ("fecha_actualizacion", models.DateTimeField(auto_now=True)),
                (
                    "actualizado_por",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="configuraciones_notificaciones",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Configuración de Notificaciones",
                "verbose_name_plural": "Configuraciones de Notificaciones",
                "db_table": "notif_configuracion",
            },
        ),
        migrations.AddIndex(
            model_name="notificacion",
            index=models.Index(
                fields=["usuario", "-fecha_creacion"],
                name="notif_notif_usuario_f66128_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="notificacion",
            index=models.Index(
                fields=["estado", "usuario"], name="notif_notif_estado_d59b12_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="notificacion",
            index=models.Index(
                fields=["prioridad", "-fecha_creacion"],
                name="notif_notif_priorid_ebb8f2_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="notificacion",
            index=models.Index(
                fields=["tipo_notificacion", "estado"],
                name="notif_notif_tipo_no_aeeb7f_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="notificacion",
            index=models.Index(
                fields=["content_type", "object_id"],
                name="notif_notif_content_593995_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="lognotificacion",
            index=models.Index(
                fields=["notificacion", "-fecha_intento"],
                name="notif_log_notific_cf9181_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="lognotificacion",
            index=models.Index(
                fields=["canal", "resultado"], name="notif_log_canal_07d16e_idx"
            ),
        ),
    ]
