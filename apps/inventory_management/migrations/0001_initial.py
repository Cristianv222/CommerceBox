# Generated by Django 4.2.7 on 2025-09-30 19:54

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("sales_management", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Categoria",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("nombre", models.CharField(max_length=100, unique=True)),
                ("descripcion", models.TextField(blank=True)),
                (
                    "margen_ganancia_sugerido",
                    models.DecimalField(
                        decimal_places=2,
                        default=30.0,
                        help_text="Porcentaje de margen sugerido (%)",
                        max_digits=5,
                    ),
                ),
                (
                    "descuento_maximo_permitido",
                    models.DecimalField(
                        decimal_places=2,
                        default=10.0,
                        help_text="Descuento máximo permitido (%)",
                        max_digits=5,
                    ),
                ),
                ("activa", models.BooleanField(default=True)),
                (
                    "orden",
                    models.IntegerField(default=0, help_text="Orden de visualización"),
                ),
                ("fecha_creacion", models.DateTimeField(auto_now_add=True)),
                ("fecha_actualizacion", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Categoría",
                "verbose_name_plural": "Categorías",
                "db_table": "inv_categoria",
                "ordering": ["orden", "nombre"],
            },
        ),
        migrations.CreateModel(
            name="Compra",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "numero_compra",
                    models.CharField(
                        help_text="Número interno de compra (ej: COM-2025-00001)",
                        max_length=20,
                        unique=True,
                    ),
                ),
                ("numero_factura", models.CharField(blank=True, max_length=50)),
                ("fecha_compra", models.DateField(default=django.utils.timezone.now)),
                ("fecha_recepcion", models.DateTimeField(blank=True, null=True)),
                (
                    "subtotal",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "descuento",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "impuestos",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "total",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("PENDIENTE", "Pendiente de recibir"),
                            ("RECIBIDA", "Recibida completamente"),
                            ("PARCIAL", "Recibida parcialmente"),
                            ("CANCELADA", "Cancelada"),
                        ],
                        db_index=True,
                        default="PENDIENTE",
                        max_length=20,
                    ),
                ),
                ("observaciones", models.TextField(blank=True)),
                ("fecha_creacion", models.DateTimeField(auto_now_add=True)),
                ("fecha_actualizacion", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Compra",
                "verbose_name_plural": "Compras",
                "db_table": "inv_compra",
                "ordering": ["-fecha_compra"],
            },
        ),
        migrations.CreateModel(
            name="Producto",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "codigo_barras",
                    models.CharField(
                        db_index=True,
                        help_text="Código de barras o código interno (CBX-PRD-XXXX)",
                        max_length=50,
                        unique=True,
                    ),
                ),
                ("nombre", models.CharField(max_length=200)),
                ("descripcion", models.TextField(blank=True)),
                (
                    "tipo_inventario",
                    models.CharField(
                        choices=[
                            ("QUINTAL", "Quintal - A granel (se vende por peso)"),
                            ("NORMAL", "Normal - Unidades completas"),
                        ],
                        db_index=True,
                        default="NORMAL",
                        max_length=20,
                    ),
                ),
                (
                    "precio_por_unidad_peso",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Precio por unidad de peso (ej: $2.50/lb)",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "peso_base_quintal",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        help_text="Peso estándar de un quintal (ej: 100 lb)",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "precio_unitario",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Precio por unidad completa",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "imagen",
                    models.ImageField(blank=True, null=True, upload_to="productos/"),
                ),
                ("activo", models.BooleanField(default=True)),
                ("fecha_creacion", models.DateTimeField(auto_now_add=True)),
                ("fecha_actualizacion", models.DateTimeField(auto_now=True)),
                (
                    "categoria",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="productos",
                        to="inventory_management.categoria",
                    ),
                ),
            ],
            options={
                "verbose_name": "Producto",
                "verbose_name_plural": "Productos",
                "db_table": "inv_producto",
                "ordering": ["nombre"],
            },
        ),
        migrations.CreateModel(
            name="Proveedor",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("nombre_comercial", models.CharField(max_length=200)),
                ("razon_social", models.CharField(blank=True, max_length=200)),
                (
                    "ruc_nit",
                    models.CharField(
                        max_length=20,
                        unique=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                "^\\d{10,20}$", "RUC/NIT inválido"
                            )
                        ],
                    ),
                ),
                ("telefono", models.CharField(blank=True, max_length=20)),
                ("email", models.EmailField(blank=True, max_length=254)),
                ("direccion", models.TextField(blank=True)),
                (
                    "dias_credito",
                    models.IntegerField(
                        default=0, help_text="Días de crédito otorgados"
                    ),
                ),
                (
                    "limite_credito",
                    models.DecimalField(
                        decimal_places=2,
                        default=0,
                        help_text="Límite de crédito ($)",
                        max_digits=10,
                    ),
                ),
                ("activo", models.BooleanField(default=True)),
                ("fecha_registro", models.DateTimeField(auto_now_add=True)),
                ("fecha_actualizacion", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Proveedor",
                "verbose_name_plural": "Proveedores",
                "db_table": "inv_proveedor",
                "ordering": ["nombre_comercial"],
            },
        ),
        migrations.CreateModel(
            name="UnidadMedida",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("nombre", models.CharField(max_length=50, unique=True)),
                ("abreviatura", models.CharField(max_length=10)),
                (
                    "factor_conversion_kg",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="Factor de conversión a kilogramos (kg como base)",
                        max_digits=10,
                    ),
                ),
                ("es_sistema_metrico", models.BooleanField(default=True)),
                ("orden_display", models.IntegerField(default=0)),
                ("activa", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name": "Unidad de Medida",
                "verbose_name_plural": "Unidades de Medida",
                "db_table": "inv_unidad_medida",
                "ordering": ["orden_display", "nombre"],
            },
        ),
        migrations.CreateModel(
            name="Quintal",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "codigo_unico",
                    models.CharField(
                        db_index=True,
                        help_text="Código único del quintal (ej: CBX-QNT-00001)",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "peso_inicial",
                    models.DecimalField(
                        decimal_places=3,
                        help_text="Peso al recibir el quintal (en unidad base del producto)",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.001"))
                        ],
                    ),
                ),
                (
                    "peso_actual",
                    models.DecimalField(
                        decimal_places=3,
                        help_text="Peso disponible actual (va disminuyendo con ventas)",
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.000"))
                        ],
                    ),
                ),
                (
                    "estado",
                    models.CharField(
                        choices=[
                            ("DISPONIBLE", "🟢 Disponible - Tiene peso disponible"),
                            ("AGOTADO", "⚫ Agotado - Peso en cero"),
                            ("DAÑADO", "🔴 Dañado - Producto no vendible"),
                        ],
                        db_index=True,
                        default="DISPONIBLE",
                        max_length=20,
                    ),
                ),
                (
                    "costo_total",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Costo total de compra de este quintal",
                        max_digits=10,
                    ),
                ),
                (
                    "costo_por_unidad",
                    models.DecimalField(
                        decimal_places=4,
                        help_text="Costo por unidad de peso (calculado: costo_total / peso_inicial)",
                        max_digits=10,
                    ),
                ),
                (
                    "fecha_recepcion",
                    models.DateTimeField(
                        db_index=True,
                        default=django.utils.timezone.now,
                        help_text="Fecha de ingreso al inventario (importante para FIFO)",
                    ),
                ),
                (
                    "fecha_vencimiento",
                    models.DateField(
                        blank=True,
                        help_text="Fecha de vencimiento del producto",
                        null=True,
                    ),
                ),
                (
                    "lote_proveedor",
                    models.CharField(
                        blank=True,
                        help_text="Número de lote del proveedor",
                        max_length=50,
                    ),
                ),
                ("numero_factura_compra", models.CharField(blank=True, max_length=50)),
                (
                    "origen",
                    models.CharField(
                        blank=True,
                        help_text="Origen del producto (ej: Productor local, Importado de USA)",
                        max_length=200,
                    ),
                ),
                ("fecha_creacion", models.DateTimeField(auto_now_add=True)),
                ("fecha_actualizacion", models.DateTimeField(auto_now=True)),
                (
                    "producto",
                    models.ForeignKey(
                        limit_choices_to={"tipo_inventario": "QUINTAL"},
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="quintales",
                        to="inventory_management.producto",
                    ),
                ),
                (
                    "proveedor",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="inventory_management.proveedor",
                    ),
                ),
                (
                    "unidad_medida",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="inventory_management.unidadmedida",
                    ),
                ),
                (
                    "usuario_registro",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="quintales_registrados",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Quintal",
                "verbose_name_plural": "Quintales",
                "db_table": "inv_quintal",
                "ordering": ["fecha_recepcion"],
            },
        ),
        migrations.CreateModel(
            name="ProductoNormal",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "stock_actual",
                    models.IntegerField(
                        default=0,
                        help_text="Unidades disponibles en inventario",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "stock_minimo",
                    models.IntegerField(
                        default=10,
                        help_text="Alerta cuando el stock baja de este valor (🟡 Amarillo)",
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "stock_maximo",
                    models.IntegerField(
                        blank=True,
                        help_text="Stock máximo recomendado",
                        null=True,
                        validators=[django.core.validators.MinValueValidator(0)],
                    ),
                ),
                (
                    "costo_unitario",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Costo promedio ponderado por unidad",
                        max_digits=10,
                    ),
                ),
                (
                    "lote",
                    models.CharField(
                        blank=True, help_text="Número de lote actual", max_length=50
                    ),
                ),
                ("fecha_vencimiento", models.DateField(blank=True, null=True)),
                (
                    "ubicacion_almacen",
                    models.CharField(
                        blank=True,
                        help_text="Ubicación física (ej: Pasillo 3, Estante B, Nivel 2)",
                        max_length=100,
                    ),
                ),
                ("fecha_ultima_entrada", models.DateTimeField(blank=True, null=True)),
                ("fecha_ultima_salida", models.DateTimeField(blank=True, null=True)),
                ("fecha_creacion", models.DateTimeField(auto_now_add=True)),
                ("fecha_actualizacion", models.DateTimeField(auto_now=True)),
                (
                    "producto",
                    models.OneToOneField(
                        limit_choices_to={"tipo_inventario": "NORMAL"},
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="inventario_normal",
                        to="inventory_management.producto",
                    ),
                ),
            ],
            options={
                "verbose_name": "Producto Normal",
                "verbose_name_plural": "Productos Normales",
                "db_table": "inv_producto_normal",
            },
        ),
        migrations.AddField(
            model_name="producto",
            name="proveedor",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="productos",
                to="inventory_management.proveedor",
            ),
        ),
        migrations.AddField(
            model_name="producto",
            name="unidad_medida_base",
            field=models.ForeignKey(
                blank=True,
                help_text="Unidad base para quintales (kg, lb, etc)",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="inventory_management.unidadmedida",
            ),
        ),
        migrations.AddField(
            model_name="producto",
            name="usuario_registro",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="productos_registrados",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="MovimientoQuintal",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "tipo_movimiento",
                    models.CharField(
                        choices=[
                            ("ENTRADA", "📥 Entrada inicial (recepción)"),
                            ("VENTA", "🛒 Salida por venta"),
                            ("AJUSTE_POSITIVO", "➕ Ajuste positivo (corrección suma)"),
                            ("AJUSTE_NEGATIVO", "➖ Ajuste negativo (corrección resta)"),
                            ("MERMA", "💔 Merma/Pérdida"),
                            ("DEVOLUCION", "↩️ Devolución de cliente"),
                        ],
                        db_index=True,
                        max_length=20,
                    ),
                ),
                (
                    "peso_movimiento",
                    models.DecimalField(
                        decimal_places=3,
                        help_text="Cantidad del movimiento (+ entrada, - salida)",
                        max_digits=10,
                    ),
                ),
                (
                    "peso_antes",
                    models.DecimalField(
                        decimal_places=3,
                        help_text="Peso del quintal ANTES del movimiento",
                        max_digits=10,
                    ),
                ),
                (
                    "peso_despues",
                    models.DecimalField(
                        decimal_places=3,
                        help_text="Peso del quintal DESPUÉS del movimiento",
                        max_digits=10,
                    ),
                ),
                (
                    "fecha_movimiento",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now
                    ),
                ),
                ("observaciones", models.TextField(blank=True)),
                (
                    "quintal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="movimientos",
                        to="inventory_management.quintal",
                    ),
                ),
                (
                    "unidad_medida",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="inventory_management.unidadmedida",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "venta",
                    models.ForeignKey(
                        blank=True,
                        help_text="Venta asociada si el movimiento es por venta",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="sales_management.venta",
                    ),
                ),
            ],
            options={
                "verbose_name": "Movimiento de Quintal",
                "verbose_name_plural": "Movimientos de Quintales",
                "db_table": "inv_movimiento_quintal",
                "ordering": ["-fecha_movimiento"],
            },
        ),
        migrations.CreateModel(
            name="MovimientoInventario",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "tipo_movimiento",
                    models.CharField(
                        choices=[
                            ("ENTRADA_COMPRA", "📥 Entrada por compra"),
                            (
                                "ENTRADA_DEVOLUCION",
                                "↩️ Entrada por devolución de cliente",
                            ),
                            ("ENTRADA_AJUSTE", "➕ Entrada por ajuste de inventario"),
                            ("SALIDA_VENTA", "🛒 Salida por venta"),
                            (
                                "SALIDA_DEVOLUCION",
                                "↪️ Salida por devolución a proveedor",
                            ),
                            ("SALIDA_MERMA", "💔 Salida por merma/daño"),
                            ("SALIDA_AJUSTE", "➖ Salida por ajuste de inventario"),
                        ],
                        db_index=True,
                        max_length=30,
                    ),
                ),
                (
                    "cantidad",
                    models.IntegerField(
                        help_text="Cantidad de unidades (positivo = entrada, negativo = salida)"
                    ),
                ),
                (
                    "stock_antes",
                    models.IntegerField(help_text="Stock ANTES del movimiento"),
                ),
                (
                    "stock_despues",
                    models.IntegerField(help_text="Stock DESPUÉS del movimiento"),
                ),
                (
                    "costo_unitario",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Costo unitario al momento del movimiento",
                        max_digits=10,
                    ),
                ),
                (
                    "costo_total",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="cantidad × costo_unitario",
                        max_digits=10,
                    ),
                ),
                (
                    "fecha_movimiento",
                    models.DateTimeField(
                        db_index=True, default=django.utils.timezone.now
                    ),
                ),
                ("observaciones", models.TextField(blank=True)),
                (
                    "compra",
                    models.ForeignKey(
                        blank=True,
                        help_text="Referencia a compra (si se implementa módulo de compras)",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="inventory_management.compra",
                    ),
                ),
                (
                    "producto_normal",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="movimientos",
                        to="inventory_management.productonormal",
                    ),
                ),
                (
                    "usuario",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "venta",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="sales_management.venta",
                    ),
                ),
            ],
            options={
                "verbose_name": "Movimiento de Inventario",
                "verbose_name_plural": "Movimientos de Inventario",
                "db_table": "inv_movimiento_inventario",
                "ordering": ["-fecha_movimiento"],
            },
        ),
        migrations.CreateModel(
            name="DetalleCompra",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "peso_comprado",
                    models.DecimalField(
                        blank=True,
                        decimal_places=3,
                        help_text="Peso comprado si es quintal",
                        max_digits=10,
                        null=True,
                    ),
                ),
                (
                    "cantidad_unidades",
                    models.IntegerField(
                        blank=True,
                        help_text="Cantidad de unidades si es producto normal",
                        null=True,
                    ),
                ),
                (
                    "costo_unitario",
                    models.DecimalField(
                        decimal_places=4,
                        help_text="Costo por unidad de peso o por unidad completa",
                        max_digits=10,
                    ),
                ),
                ("subtotal", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "recibido",
                    models.BooleanField(
                        default=False,
                        help_text="Indica si este detalle ya fue recibido en inventario",
                    ),
                ),
                ("fecha_recepcion", models.DateTimeField(blank=True, null=True)),
                (
                    "compra",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="detalles",
                        to="inventory_management.compra",
                    ),
                ),
                (
                    "producto",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="inventory_management.producto",
                    ),
                ),
                (
                    "quintal_creado",
                    models.ForeignKey(
                        blank=True,
                        help_text="Quintal creado al recibir esta compra",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="inventory_management.quintal",
                    ),
                ),
                (
                    "unidad_medida",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        to="inventory_management.unidadmedida",
                    ),
                ),
            ],
            options={
                "verbose_name": "Detalle de Compra",
                "verbose_name_plural": "Detalles de Compra",
                "db_table": "inv_detalle_compra",
            },
        ),
        migrations.CreateModel(
            name="ConversionUnidad",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "factor_conversion",
                    models.DecimalField(
                        decimal_places=6,
                        help_text="Factor para convertir origen a destino",
                        max_digits=10,
                    ),
                ),
                (
                    "descripcion",
                    models.CharField(
                        blank=True,
                        help_text="Ej: 1 quintal = 100 libras",
                        max_length=200,
                    ),
                ),
                (
                    "unidad_destino",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conversiones_destino",
                        to="inventory_management.unidadmedida",
                    ),
                ),
                (
                    "unidad_origen",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="conversiones_origen",
                        to="inventory_management.unidadmedida",
                    ),
                ),
            ],
            options={
                "verbose_name": "Conversión de Unidad",
                "verbose_name_plural": "Conversiones de Unidades",
                "db_table": "inv_conversion_unidad",
            },
        ),
        migrations.AddField(
            model_name="compra",
            name="proveedor",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="compras",
                to="inventory_management.proveedor",
            ),
        ),
        migrations.AddField(
            model_name="compra",
            name="usuario_recepcion",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="compras_recibidas",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="compra",
            name="usuario_registro",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.PROTECT,
                related_name="compras_registradas",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddIndex(
            model_name="quintal",
            index=models.Index(
                fields=["codigo_unico"], name="inv_quintal_codigo__66273c_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="quintal",
            index=models.Index(
                fields=["producto", "estado", "fecha_recepcion"],
                name="inv_quintal_product_c461f4_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="quintal",
            index=models.Index(
                fields=["estado", "peso_actual"], name="inv_quintal_estado_65bca2_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="productonormal",
            index=models.Index(
                fields=["stock_actual"], name="inv_product_stock_a_7062cc_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="productonormal",
            index=models.Index(
                fields=["producto", "stock_actual"],
                name="inv_product_product_fc8553_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="producto",
            index=models.Index(
                fields=["codigo_barras"], name="inv_product_codigo__c0555b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="producto",
            index=models.Index(
                fields=["tipo_inventario", "activo"],
                name="inv_product_tipo_in_cc3683_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="producto",
            index=models.Index(
                fields=["categoria", "activo"], name="inv_product_categor_178066_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="movimientoquintal",
            index=models.Index(
                fields=["quintal", "-fecha_movimiento"],
                name="inv_movimie_quintal_ae82ac_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="movimientoquintal",
            index=models.Index(
                fields=["tipo_movimiento", "-fecha_movimiento"],
                name="inv_movimie_tipo_mo_9afc4e_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="movimientoinventario",
            index=models.Index(
                fields=["producto_normal", "-fecha_movimiento"],
                name="inv_movimie_product_4a8858_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="movimientoinventario",
            index=models.Index(
                fields=["tipo_movimiento", "-fecha_movimiento"],
                name="inv_movimie_tipo_mo_07bc80_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="movimientoinventario",
            index=models.Index(
                fields=["usuario", "-fecha_movimiento"],
                name="inv_movimie_usuario_c4d081_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="conversionunidad",
            unique_together={("unidad_origen", "unidad_destino")},
        ),
        migrations.AddIndex(
            model_name="compra",
            index=models.Index(
                fields=["numero_compra"], name="inv_compra_numero__3a8ed7_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="compra",
            index=models.Index(
                fields=["proveedor", "-fecha_compra"],
                name="inv_compra_proveed_7f9e42_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="compra",
            index=models.Index(
                fields=["estado", "-fecha_compra"], name="inv_compra_estado_3e41d2_idx"
            ),
        ),
    ]
